@namespace StableCube.Bulzor

<div class="file has-name is-boxed">
  <label class="file-label">
    <input class="file-input" type="file" name="resume" @oninput="@(async (ChangeEventArgs args) => await FileSelectedHandlerAsync(args))" />
    <span class="file-cta">
      <span class="file-icon">
        <Icon Name="upload"></Icon>
      </span>
      <span class="file-label">
        Choose a file…
      </span>
    </span>
    @if(_filename != String.Empty)
    {
        <span class="file-name">
            @_filename
        </span>
    }
  </label>
</div>

@code {
    [Parameter]
    public EventCallback<string> OnFileSelected { get; set; }

    private string _filename = String.Empty;

    protected override void OnParametersSet()
    {
        StateHasChanged();
    }

    public async Task FileSelectedHandlerAsync(ChangeEventArgs args)
    {
        // ChangeEventArgs.Value returns a path beginning with C:\fakepath\ so remove that
        _filename = args.Value.ToString().Remove(0, 12);
        if (string.IsNullOrEmpty(_filename))
            return;

        await OnFileSelected.InvokeAsync(_filename);

        StateHasChanged();
    }
}