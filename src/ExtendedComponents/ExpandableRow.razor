@namespace StableCube.Bulzor

<div class="card">
    <header class="card-header has-background-light">
        <a @onclick="@((args) => ToggleHandlerAsync())" class="card-header-title">
            @if(Expanded)
            {
                <Icon Name="angle-down" />
            }
            else
            {
                <Icon Name="angle-right" />
            }

            @ExpandableRowHeader
        </a>
    </header>

    @if(Expanded)
    {
        @if(ExpandableRowContent != null)
        {
            <div class="card-content">
                <div class="content">
                    @ExpandableRowContent
                </div>
            </div>
        }

        @if(ExpandableRowFooter != null)
        {
            <footer class="card-footer">
                @ExpandableRowFooter
            </footer>
        }
    }
</div>

@code {
    [Parameter]
    public RenderFragment ExpandableRowHeader { get; set; }

    [Parameter]
    public RenderFragment ExpandableRowContent { get; set; }

    [Parameter]
    public RenderFragment ExpandableRowFooter { get; set; }

    [Parameter]
    public bool Expanded { get; set; }

    [Parameter] 
    public EventCallback<bool> OnToggle { get; set; }

    protected override void OnParametersSet()
    {
        StateHasChanged();
    }

    private async Task ToggleHandlerAsync()
    {
        if(Expanded)
        {
            Expanded = false;
        }
        else
        {
            Expanded = true;
        }

        await OnToggle.InvokeAsync(Expanded);

        StateHasChanged();
    }
}