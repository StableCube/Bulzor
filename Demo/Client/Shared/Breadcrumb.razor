@namespace StableCube.Bulzor.Demo.Client

@inject NavigationManager _navManager

@implements IDisposable

<BulBreadcrumb Centered="true">
    <ul>
        @foreach(string pathPart in GetPathElements())
        {
            <li><a href="@GetPathRelative(pathPart)">@pathPart</a></li>
        }
    </ul>
</BulBreadcrumb>

@code {
    protected override void OnInitialized()
    {
        _navManager.LocationChanged += LocationChangedEventHandler;
    }

    public void Dispose()
    {
        _navManager.LocationChanged -= LocationChangedEventHandler;
    }

    private IEnumerable<string> GetPathElements()
    {
        return new Uri(_navManager.Uri).LocalPath.Split("/");
    }

    private string GetPathRelative(string pathPart)
    {
        List<string> localPathParts = new List<string>();
        foreach(var part in GetPathElements())
        {
            localPathParts.Add(part);

            if(part == pathPart)
                break;
        }

        return String.Join('/', localPathParts);
    }

    private async void LocationChangedEventHandler(object sender, LocationChangedEventArgs args)
    {
        await InvokeAsync(() =>
	    {
	        StateHasChanged();
	    });
    }
}