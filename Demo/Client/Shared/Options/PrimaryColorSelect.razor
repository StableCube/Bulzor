@namespace StableCube.Bulzor.Demo.Client

<div class="control">
    <label class="label">@Label</label>
    <BulInputSelect Value="(_selectedString)"
            ValueExpression="@( () => _selectedString )"
            ValueChanged="@( async (string value) => await OnChangedHandlerAsync(value) )">

        <option value="default" selected>Default</option>
        @foreach (var option in _options)
        {
            <option value="@(option.ToString())">@option.ToString()</option>
        }
    </BulInputSelect>
</div>

@code {
    [Parameter]
    public string Label { get; set; } = "Primary Color";

    [Parameter]
    public BulPrimaryColor? Value { get; set; }

    [Parameter]
    public EventCallback<BulPrimaryColor?> ValueChanged { get; set; }

    private string _selectedString = "default";
    private IEnumerable<BulPrimaryColor> _options;

    protected override void OnInitialized()
    {
        _options = Enum.GetValues(typeof(BulPrimaryColor)).Cast<BulPrimaryColor>();
    }

    public async Task OnChangedHandlerAsync(string value)
    {
        _selectedString = value;
        BulPrimaryColor? enumVal = null;
        if(value != "default")
        {
            enumVal = Enum.Parse<BulPrimaryColor>(value);
        }

        await ValueChanged.InvokeAsync(enumVal);
    }
}