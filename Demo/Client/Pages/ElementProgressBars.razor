@page "/documentation/elements/progress"

<DocumentationRoot>
    <EditForm Model="@Options">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="field">
            <label class="label">Color</label>
            <BulInputSelect Value="(_selectedColor)"
                    ValueExpression="@( () => _selectedColor )"
                    ValueChanged="@( (string value) => OnColorChangedHandler(value) )">
                @foreach (var colorOption in _colorOptions)
                {
                    <option value="@(colorOption.ToString())">@colorOption.ToString()</option>
                }
            </BulInputSelect>
        </div>

        <div class="field">
            <label class="label">Progress</label>
            <BulInputNumber 
                Value="Options.Progress"
                ValueExpression="@( () => Options.Progress )"
                ValueChanged="@( (int value) => OnProgressChangedHandler(value) )" />
        </div>

        <div class="field">
            <BulInputCheckbox 
                    Value="Options.Indeterminate"
                    ValueExpression="@( () => Options.Indeterminate )"
                    ValueChanged="@( (bool value) => OnIndeterminateChangedHandler(value) )">
                Indeterminate
            </BulInputCheckbox>
        </div>
    </EditForm>

    <div class="content">
        <BulProgressBar Color="Options.Color" Progress="Options.Progress" Indeterminate="Options.Indeterminate" />
    </div>
</DocumentationRoot>

@code {
    ProgressBarOptions Options { get; set; } = new ProgressBarOptions();

    private string _selectedColor = String.Empty;
    private IEnumerable<BulPrimaryColor> _colorOptions;

    protected override void OnInitialized()
    {
        _colorOptions = Enum.GetValues(typeof(BulPrimaryColor)).Cast<BulPrimaryColor>();
    }

    private void OnColorChangedHandler(string value)
    {
        _selectedColor = value;
        Options.Color = Enum.Parse<BulPrimaryColor>(value);

        StateHasChanged();
    }

    private void OnProgressChangedHandler(int value)
    {
        Options.Progress = value;
        StateHasChanged();
    }

    private void OnIndeterminateChangedHandler(bool value)
    {
        Options.Indeterminate = value;
        StateHasChanged();
    }
}