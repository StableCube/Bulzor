@namespace StableCube.Bulzor.Components

<button class="@_class" type="@Type" disabled="@Disabled" @onclick="@(async (args) => await ClickedHandlerAsync(args))">
    @ChildContent
</button>

@code {
    [Parameter]
    public bool Disabled { get; set; }

    [Parameter]
    public bool IsLoading { get; set; }

    [Parameter]
    public string Type { get; set; } = "button";

    [Parameter]
    public BulPrimaryColor? Color { get; set; }

    [Parameter]
    public BulColor? TextColor { get; set; }

    [Parameter]
    public BulTextSize? TextSize { get; set; }

    [Parameter]
    public BulTextWeight? TextWeight { get; set; }

    [Parameter]
    public EventCallback<EventArgs> OnClick { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    private BulmaClassBuilder _classBuilder = new BulmaClassBuilder("button");
    private string _class = String.Empty;

    protected override void OnParametersSet()
    {
        _classBuilder.SetIsLoading(IsLoading);
        _classBuilder.SetPrimaryColor(Color);
        _classBuilder.SetTextColor(TextColor);
        _classBuilder.SetTextSize(TextSize);
        _classBuilder.SetTextWeight(TextWeight);
        _class = _classBuilder.ToString();

        StateHasChanged();
    }

    public async Task ClickedHandlerAsync(EventArgs args)
    {
        await OnClick.InvokeAsync(args);
    }
}