@namespace StableCube.Bulzor.Components

<div class="@_class">
  <select @onchange="@(async (ChangeEventArgs args) => await SelectedHandlerAsync(args))">
    @ChildContent
  </select>
</div>

@code {
    [Parameter]
    public string Value { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public BulPrimaryColor? Color { get; set; }

    [Parameter]
    public BulColor? TextColor { get; set; }

    [Parameter]
    public BulSize? Size { get; set; }

    [Parameter]
    public bool? Rounded { get; set; }

    [Parameter]
    public EventCallback<string> ValueChanged { get; set; }

    private BulmaClassBuilder _classBuilder = new BulmaClassBuilder("select");
    private string _class = String.Empty;

    protected override void OnParametersSet()
    {
        _classBuilder.SetPrimaryColor(Color);
        _classBuilder.SetTextColor(TextColor);
        _classBuilder.SetSize(Size);
        _classBuilder.SetIsRounded(Rounded);
        _class = _classBuilder.ToString();

        StateHasChanged();
    }

    public async Task SelectedHandlerAsync(ChangeEventArgs args)
    {
        Value = args.Value.ToString();
        await ValueChanged.InvokeAsync(Value);
    }
}