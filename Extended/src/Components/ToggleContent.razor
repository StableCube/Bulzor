@namespace StableCube.Bulzor.Extended

<div class="dropdown @_isActive">
    <div class="dropdown-trigger">
        <button type="button" class="button" @onclick="@(async (args) => await ToggleHandlerAsync(args))">
            <span>@Title</span>
            @if(Expanded)
            {
                <Icon Name="angle-up" />
            }
            else
            {
                <Icon Name="angle-down" />
            }
        </button>
    </div>
    <div class="dropdown-menu" role="menu">
        <div class="dropdown-content">
            <div class="dropdown-item">
                @ChildContent
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public bool Expanded { get; set; }

    [Parameter] 
    public EventCallback<bool> OnToggle { get; set; }

    private string _isActive = String.Empty;

    protected override void OnParametersSet()
    {
        UpdateState();
    }

    private void UpdateState()
    {
        if(Expanded)
        {
            _isActive = "is-active";
        }
        else
        {
            _isActive = String.Empty;
        }

        StateHasChanged();
    }

    private async Task ToggleHandlerAsync(EventArgs args)
    {
        if(Expanded)
        {
            Expanded = false;
        }
        else
        {
            Expanded = true;
        }

        await OnToggle.InvokeAsync(Expanded);

        UpdateState();
    }
}