@namespace StableCube.Bulzor.Extended

@implements IDisposable

<div class="sc-time-progress-bar">
    <ProgressBar Progress="Progress" Color="Color" />
</div>

@code {
    [Parameter]
    public TimeSpan Time { get; set; }

    [Parameter]
    public TimeSpan TickInterval { get; set; } = TimeSpan.FromMilliseconds(500);

    [Parameter]
    public BulPrimaryColor? Color { get; set; }

    private bool RunTimer { get; set; }
    private TimeSpan CurrentTime { get; set; }
    private int Progress { get; set; }

    protected override void OnInitialized()
    {
        if(RunTimer == false)
        {
            StartTimerAsync();
        }
    }

    public void Dispose()
    {
        RunTimer = false;
    }

    private async void StartTimerAsync()
    {
        RunTimer = true;

        while (RunTimer)
        {
            ProgressTickHandler();
            StateHasChanged();
            await Task.Delay(TickInterval);
        }
    }

    private void ProgressTickHandler()
    {
        if(CurrentTime >= Time)
        {
            Progress = 100;
            RunTimer = false;
            return;
        }

        Progress = Convert.ToInt32((100 * CurrentTime.TotalMilliseconds) / Time.TotalMilliseconds);
        if(Progress > 100)
            Progress = 100;
        
        if(Progress == 100)
        {
            RunTimer = false;
        }

        CurrentTime += TickInterval;
    }
}