@namespace StableCube.Bulzor.Extended

<Slider 
    Value="@Value.TotalMilliseconds" 
    Min="@Min.TotalMilliseconds" 
    Max="@Max.TotalMilliseconds" 
    OnInput="@OnInputHandlerAsync" 
    OnMouseUp="@OnMouseUpHandlerAsync"
    Disabled="@Disabled"
    Size="@Size"
    Color="@Color"
    BackgroundColor="@BackgroundColor"
    BorderColor="@BorderColor" />
<div class="@_class">
    <div class="time-landmark time-landmark-start">@Min.ToString(@"mm\:ss")</div>
    <div class="time-landmark">@GetTimeString(Value)</div>
    <div class="time-landmark time-landmark-end">@GetTimeString(Max)</div>
</div>

@code {
    [Parameter]
    public TimeSpan Value { get; set; }

    [Parameter]
    public EventCallback<TimeSpan> ValueChanged { get; set; }

    [Parameter]
    public TimeSpan Min { get; set; } = TimeSpan.Zero;

    [Parameter]
    public TimeSpan Max { get; set; }

    [Parameter]
    public bool Disabled { get; set; }

    [Parameter] 
    public EventCallback<TimeSpan> OnMouseUp { get; set; }

    [Parameter]
    public BulSize? Size { get; set; }

    [Parameter]
    public BulPrimaryColor? Color { get; set; }

    [Parameter]
    public BulColor? BackgroundColor { get; set; }

    [Parameter]
    public BulColor? BorderColor { get; set; }

    private BulmaClassBuilder _classBuilder = new BulmaClassBuilder("time-landmarks");
    private string _class = String.Empty;

    protected override void OnParametersSet()
    {
        _classBuilder.SetPrimaryColor(Color);
        _classBuilder.SetSize(Size);
        _classBuilder.SetBackgroundColor(BorderColor);
        _class = _classBuilder.ToString();

        StateHasChanged();
    }

    private async Task OnInputHandlerAsync(double sliderVal)
    {
        var timeVal = TimeSpan.FromMilliseconds(sliderVal);
        if(timeVal == Value)
            return;
        
        Value = timeVal;
        await ValueChanged.InvokeAsync(Value);
    }

    private async Task OnMouseUpHandlerAsync(double sliderVal)
    {
        await OnMouseUp.InvokeAsync(TimeSpan.FromMilliseconds(sliderVal));
    }

    private string GetTimeString(TimeSpan time)
    {
        if(time.TotalMinutes < 1)
            return time.ToString(@"ss\.ff");

        if(time.TotalHours < 1)
            return time.ToString(@"mm\:ss\.ff");

        return time.ToString(@"hh\:mm\:ss\.ff");
    }
}